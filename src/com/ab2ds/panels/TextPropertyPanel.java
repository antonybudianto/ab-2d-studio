/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.ab2ds.panels;

import com.ab2ds.core.MainFrame;
import com.falcron.graphics.core.SimpleText;
import com.falcron.graphics.scene.SimpleScene;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.JColorChooser;
/**
 *
 * @author Antony
 */
public class TextPropertyPanel extends javax.swing.JPanel {

    /**
     * Creates new form OvalPropertyPanel
     */
    public SimpleText text;
    private JColorChooser color;
    private SimpleScene scene;
    private EntityPropertyPanel entitypanel;
    
    public TextPropertyPanel(MainFrame mainframe) {
        initComponents();
        this.entitypanel = new EntityPropertyPanel(mainframe);
        paneltesting.setLayout(null);
        paneltesting.add(entitypanel);
        paneltesting.updateUI();
        entitypanel.setBounds(0, 0, entitypanel.getWidth(), entitypanel.getHeight());
        Dimension d = getPreferredSize();
        setSize(d);
        color = new JColorChooser(Color.white);
        String []fontNames=GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        for(int i=0;i<fontNames.length;i++){
            cbfontfam.addItem(fontNames[i]);
        }
        
    }
    
    public void set(SimpleText text, SimpleScene scene){
        this.text = text;
        entitypanel.setEntity(text, scene);
        jpcolor.setBackground(text.color);
        jtfText.setText(text.getText());
        cbfontfam.setSelectedItem(text.getFont().getName());
        cbstyle.setSelectedIndex(text.getFont().getStyle());
        jspsize.setValue(text.getFont().getSize());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbfontfam = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jspsize = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        cbstyle = new javax.swing.JComboBox();
        jtfText = new javax.swing.JTextField();
        jpcolor = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        paneltesting = new javax.swing.JScrollPane();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Text Properties"));
        setPreferredSize(new java.awt.Dimension(438, 563));
        setLayout(null);

        jLabel1.setText("Font Family");
        add(jLabel1);
        jLabel1.setBounds(20, 90, 76, 14);

        cbfontfam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbfontfamItemStateChanged(evt);
            }
        });
        add(cbfontfam);
        cbfontfam.setBounds(20, 110, 158, 30);

        jLabel2.setText("Font Size");
        add(jLabel2);
        jLabel2.setBounds(180, 90, 62, 14);

        jspsize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jspsize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspsizeStateChanged(evt);
            }
        });
        add(jspsize);
        jspsize.setBounds(180, 110, 62, 30);

        jLabel3.setText("Font Style");
        add(jLabel3);
        jLabel3.setBounds(250, 90, 100, 14);

        cbstyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PLAIN", "BOLD", "ITALIC", "ITALIC BOLD" }));
        cbstyle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbstyleItemStateChanged(evt);
            }
        });
        add(cbstyle);
        cbstyle.setBounds(250, 110, 100, 30);

        jtfText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTextKeyReleased(evt);
            }
        });
        add(jtfText);
        jtfText.setBounds(20, 50, 190, 30);

        javax.swing.GroupLayout jpcolorLayout = new javax.swing.GroupLayout(jpcolor);
        jpcolor.setLayout(jpcolorLayout);
        jpcolorLayout.setHorizontalGroup(
            jpcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        jpcolorLayout.setVerticalGroup(
            jpcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        add(jpcolor);
        jpcolor.setBounds(220, 50, 28, 30);

        jButton1.setText("Change color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(250, 50, 120, 30);

        jLabel4.setText("Text");
        add(jLabel4);
        jLabel4.setBounds(20, 30, 190, 14);

        paneltesting.setBorder(null);
        add(paneltesting);
        paneltesting.setBounds(20, 170, 400, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTextKeyReleased
       if(text != null)
        text.setText(jtfText.getText());
    }//GEN-LAST:event_jtfTextKeyReleased

    private void cbfontfamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbfontfamItemStateChanged
        // TODO add your handling code here:
       if(text != null)
        text.setFontFamily(cbfontfam.getSelectedItem().toString());
    }//GEN-LAST:event_cbfontfamItemStateChanged

    private void jspsizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspsizeStateChanged
        // TODO add your handling code here:
       if(text != null)
        text.setFontSize(Integer.parseInt(jspsize.getValue().toString()));
    }//GEN-LAST:event_jspsizeStateChanged

    private void cbstyleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbstyleItemStateChanged
        // TODO add your handling code here:
        if(text != null){
            if(cbstyle.getSelectedIndex() == 3){
                text.setFontStyle(Font.BOLD|Font.ITALIC);
            }else{
                text.setFontStyle(cbstyle.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_cbstyleItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Color c = JColorChooser.showDialog(null, "Choose text color", text.color);
        text.color = c;
        jpcolor.setBackground(text.color);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbfontfam;
    private javax.swing.JComboBox cbstyle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jpcolor;
    private javax.swing.JSpinner jspsize;
    private javax.swing.JTextField jtfText;
    private javax.swing.JScrollPane paneltesting;
    // End of variables declaration//GEN-END:variables
}
