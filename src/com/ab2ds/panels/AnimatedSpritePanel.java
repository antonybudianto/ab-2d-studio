/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ab2ds.panels;

import com.ab2ds.core.MainFrame;
import com.falcron.graphics.scene.SimpleScene;
import com.falcron.sprite.AnimatedSprite;
import com.falcron.sprite.Animation;
import java.util.Map;
import java.util.Map.Entry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author prk
 */
public class AnimatedSpritePanel extends javax.swing.JPanel {

    /**
     * Creates new form AnimatedSpriteDialog
     */
    private EntityPropertyPanel entitypanel;
    private AnimatedSprite animsprite;
    private Animation anim;
    
    public AnimatedSpritePanel(MainFrame mainframe) {
        initComponents();
        this.entitypanel = new EntityPropertyPanel(mainframe);
        
        paneltmp.setLayout(null);
        paneltmp.add(entitypanel);
        paneltmp.updateUI();
        entitypanel.setBounds(0, 0, entitypanel.getWidth(), entitypanel.getHeight());
        
        setSize(getPreferredSize());
    }

    public void set(AnimatedSprite as, SimpleScene scene){
        entitypanel.setEntity(as, scene);
        this.animsprite = as;
        
        DefaultListModel model = new DefaultListModel();
        DefaultComboBoxModel modelcb = new DefaultComboBoxModel();
        modelcb.addElement("No transition");
        for(Map.Entry<String, Animation> entry : as.getAnimator().getAnimations().entrySet()){
           model.addElement(entry.getKey());
           modelcb.addElement(entry.getKey());
        }
        listanimation.setModel(model);
        listanimation.setSelectedValue(animsprite.getAnimator().getIdleAnimation(), true);
        jcbtransition.setModel(modelcb);
        if(animsprite.getAnimator().getAnimation(listanimation.getSelectedValue().toString()).transition == null){
            jcbtransition.setSelectedIndex(0);
        }else{
            jcbtransition.setSelectedItem(animsprite.getAnimator().getAnimation(animsprite.getAnimator().getIdleAnimation()).transition);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listanimation = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jtfname = new javax.swing.JTextField();
        jcbloop = new javax.swing.JCheckBox();
        jcbidle = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jspframerate = new javax.swing.JSpinner();
        jsprow = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jspcol = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbtransition = new javax.swing.JComboBox();
        paneltmp = new javax.swing.JScrollPane();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Animated Sprite Properties"));
        setPreferredSize(new java.awt.Dimension(445, 500));
        setLayout(null);

        listanimation.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listanimation.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listanimationValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listanimation);

        jLabel1.setText("Name");

        jtfname.setEditable(false);
        jtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfnameKeyReleased(evt);
            }
        });

        jcbloop.setText("Loop");
        jcbloop.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbloopStateChanged(evt);
            }
        });

        jcbidle.setText("Idle");
        jcbidle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbidleStateChanged(evt);
            }
        });

        jLabel2.setText("Framerate");

        jspframerate.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jspframerate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspframerateStateChanged(evt);
            }
        });

        jsprow.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jsprow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsprowStateChanged(evt);
            }
        });

        jLabel3.setText("Row");

        jspcol.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jspcol.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspcolStateChanged(evt);
            }
        });

        jLabel4.setText("Column");

        jLabel5.setText("Transition");

        jcbtransition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbtransition.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbtransitionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtfname, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jsprow, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jspframerate)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jspcol)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jcbloop))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jcbidle))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jcbtransition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(100, 100, 100))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jspframerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jspcol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsprow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbloop)
                            .addComponent(jcbidle)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbtransition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        add(jScrollPane2);
        jScrollPane2.setBounds(10, 30, 360, 170);

        paneltmp.setBorder(null);
        add(paneltmp);
        paneltmp.setBounds(10, 220, 420, 330);
    }// </editor-fold>//GEN-END:initComponents

    private void listanimationValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listanimationValueChanged
        if(listanimation.getSelectedValue() != null){
            for(Entry<String, Animation> en : animsprite.getAnimator().getAnimations().entrySet()){
                    if(en.getKey().equals(listanimation.getSelectedValue().toString())){
                        anim = en.getValue();
                        break;
                    }
            }

            jtfname.setText(listanimation.getSelectedValue().toString());
            jspcol.setValue(anim.col);
            jsprow.setValue(anim.row);
            jspframerate.setValue(anim.framerate);
            jcbloop.setSelected(anim.loop);
            if(animsprite.getAnimator().getIdleAnimation().equals(listanimation.getSelectedValue().toString())){
                jcbidle.setSelected(true);
            }else{
                jcbidle.setSelected(false);
            }
            
            if(animsprite.getAnimator().getAnimation(listanimation.getSelectedValue().toString()).transition == null){
                jcbtransition.setSelectedIndex(0);
            }else{
                jcbtransition.setSelectedItem(animsprite.getAnimator().getAnimationKey(animsprite.getAnimator().getAnimation(animsprite.getAnimator().getIdleAnimation()).transition));
            }
        }
    }//GEN-LAST:event_listanimationValueChanged

    private void jspframerateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspframerateStateChanged
        anim.framerate = Integer.parseInt(jspframerate.getValue().toString());
    }//GEN-LAST:event_jspframerateStateChanged

    private void jcbidleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbidleStateChanged
        if(jcbidle.isSelected()){
            animsprite.getAnimator().setIdleAnimation(listanimation.getSelectedValue().toString());
        }
    }//GEN-LAST:event_jcbidleStateChanged

    private void jcbloopStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbloopStateChanged
        if(anim != null){
            anim.loop = jcbloop.isSelected();
        }
    }//GEN-LAST:event_jcbloopStateChanged

    private void jsprowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsprowStateChanged
        if(anim != null){
            anim.row = Integer.parseInt(jsprow.getValue().toString());
        }
    }//GEN-LAST:event_jsprowStateChanged

    private void jspcolStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspcolStateChanged
        if(anim != null){
            anim.col = Integer.parseInt(jspcol.getValue().toString());
        }
    }//GEN-LAST:event_jspcolStateChanged

    private void jtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfnameKeyReleased
        
    }//GEN-LAST:event_jtfnameKeyReleased

    private void jcbtransitionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbtransitionItemStateChanged
        if(jcbtransition.getSelectedIndex() == 0){
            animsprite.getAnimator().getAnimation(listanimation.getSelectedValue().toString()).transition = null;
        }else{
            animsprite.getAnimator().getAnimation(listanimation.getSelectedValue().toString()).transition = 
                    animsprite.getAnimator().getAnimation(jcbtransition.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jcbtransitionItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox jcbidle;
    private javax.swing.JCheckBox jcbloop;
    private javax.swing.JComboBox jcbtransition;
    private javax.swing.JSpinner jspcol;
    private javax.swing.JSpinner jspframerate;
    private javax.swing.JSpinner jsprow;
    private javax.swing.JTextField jtfname;
    private javax.swing.JList listanimation;
    private javax.swing.JScrollPane paneltmp;
    // End of variables declaration//GEN-END:variables
}
